@page "/"
@using BlazorApp.Services
@using global::Shared.Models
@using HttpClients.ClientInterfaces
@using IPostService = HttpClients.ClientInterfaces.IPostService
@inject IPostService postService
<PageTitle>Index</PageTitle>

<link href="css/index.css" rel="stylesheet"/>

<AuthorizeView>
    <NotAuthorized>

    <div class="main_div">
        <h1 id="welcome_banner">Velkommen til 4tune</h1>
        <h2 id="welcome_subbanner">Du kan logge ind øverest i højre hjørne</h2>
        <h4>Ytringsfrihed er ikke til diskussion</h4>
    </div>
</NotAuthorized>

    <Authorized>
        <div>
            <button style="background-color: #ffa500" @onclick="LoadPosts">Load</button>
        </div>

        @if (posts == null)
        {
        }
        else if (!posts.Any())
        {
            <p>No Posts to display</p>
        }
        else
        {
            <table class="table">
                <thead>
                <tr>
                    <th>post ID</th>
                    <th>Owner ID</th>
                    <th>Title</th>
                    <th>Body</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in posts)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Owner.Username</td>
                        <td>@item.Title</td>
                        <td>@item.Body</td>
                    </tr>
                }
                </tbody>
            </table>
        }
        @if (!string.IsNullOrEmpty(msg))
        {
            <label style="color: red">@msg</label>
        }


        @code
        {
            private IEnumerable<Post>? posts;
            private string msg = "";

            private async Task LoadPosts()
            {
                try
                {
                    posts = await postService.GetAsync(null, null);
                }
                catch (Exception e)
                {
                    Console.WriteLine(e);
                    msg = e.Message;
                }
            }

        }


    </Authorized>
</AuthorizeView>